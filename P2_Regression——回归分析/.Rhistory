install.packages('e1071')
library("e1071", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
setwd("~/Documents/ML A-Z/P2_Regression")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
regressor = svm(formula = Salary ~.,
data = dataset,
type = 'eps-regression')
y_pred = predict(regressor, data.frame(level= 6.5))
y_pred = predict(regressor, data.frame(Level= 6.5))
ggplot()+
geom_point(aes(x= dataset$Level, y = dataset$Salary ),
colour = 'red') +
geom_line(aes(x =  dataset$Level, y = predict(lin_reg,newdata = dataset)),
colour= 'blue') +
ggtitle('Position vs Salary (SVR)') +
xlab('Position levels') +
ylab('Salary')
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot()+
geom_point(aes(x= dataset$Level, y = dataset$Salary ),
colour = 'red') +
geom_line(aes(x =  dataset$Level, y = predict(lin_reg,newdata = dataset)),
colour= 'blue') +
ggtitle('Position vs Salary (SVR)') +
xlab('Position levels') +
ylab('Salary')
ggplot()+
geom_point(aes(x= dataset$Level, y = dataset$Salary ),
colour = 'red') +
geom_line(aes(x =  dataset$Level, y = predict(regressor,newdata = dataset)),
colour= 'blue') +
ggtitle('Position vs Salary (SVR)') +
xlab('Position levels') +
ylab('Salary')
install.packages('rpart')
library("rpart", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
regressor = rpart(formula = Salary~ .,
data = dataset)
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Regression Model)') +
xlab('Level') +
ylab('Salary')
regressor = rpart(formula = Salary~ .,
data = dataset,
control = rpart.control(minsplit = 1))
y_pred = predict(regressor, data.frame(Level = 6.5))
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Model)') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff ( Decision Tree Regression Model)') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff ( Decision Tree Regression Model)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(regressor, data.frame(Level = 6.5))
install.packages('randomForest')
library("randomForest", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
regressor = randomForest(x = dataset[1], #note x takes data frames, dataset[1] gives dataframe
y = dataset$Salary, # y takes vector, dataset$Salary gives vector
ntree = 10)
set.seed(123)
regressor = randomForest(x = dataset[1], #note x takes data frames, dataset[1] gives dataframe
y = dataset$Salary, # y takes vector, dataset$Salary gives vector
ntree = 10)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Regression Model)') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Regression Model)') +
xlab('Level') +
ylab('Salary')
regressor = randomForest(x = dataset[1], #note x takes data frames, dataset[1] gives dataframe
y = dataset$Salary, # y takes vector, dataset$Salary gives vector
ntree = 100)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Regression Model)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(regressor, data.frame(Level = 6.5))
regressor = randomForest(x = dataset[1], #note x takes data frames, dataset[1] gives dataframe
y = dataset$Salary, # y takes vector, dataset$Salary gives vector
ntree = 300)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Regression Model)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(regressor, data.frame(Level = 6.5))
regressor = randomForest(x = dataset[1], #note x takes data frames, dataset[1] gives dataframe
y = dataset$Salary, # y takes vector, dataset$Salary gives vector
ntree = 500)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Regression Model)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(regressor, data.frame(Level = 6.5))
y_pred = predict(regressor, data.frame(Level = 6.5))
